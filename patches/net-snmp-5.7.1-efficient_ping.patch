diff -burN net-snmp-5.7.1/agent/mibgroup/agentx/subagent.c net-snmp-5.7.1-efficient_ping/agent/mibgroup/agentx/subagent.c
--- net-snmp-5.7.1/agent/mibgroup/agentx/subagent.c	2011-09-27 23:53:47.000000000 -0500
+++ net-snmp-5.7.1-efficient_ping/agent/mibgroup/agentx/subagent.c	2012-03-14 18:13:29.000000000 -0500
@@ -318,6 +318,11 @@
     pdu->version = AGENTX_VERSION_1;
     pdu->flags |= UCD_MSG_FLAG_ALWAYS_IN_VIEW;
 
+    /* Master agent is alive, no need to ping */
+    if (session->securityModel != SNMP_DEFAULT_SECMODEL) {
+        snmp_alarm_reset(session->securityModel);
+    }
+
     if (pdu->command == AGENTX_MSG_GET
         || pdu->command == AGENTX_MSG_GETNEXT
         || pdu->command == AGENTX_MSG_GETBULK) {
diff -burN net-snmp-5.7.1/snmplib/snmp_alarm.c net-snmp-5.7.1-efficient_ping/snmplib/snmp_alarm.c
--- net-snmp-5.7.1/snmplib/snmp_alarm.c	2011-09-27 23:53:47.000000000 -0500
+++ net-snmp-5.7.1-efficient_ping/snmplib/snmp_alarm.c	2012-03-14 18:13:29.000000000 -0500
@@ -473,4 +473,35 @@
 
     return (*s)->clientreg;
 }
+
+/**
+ * This function resets an existing alarm.
+ *
+ * @param clientreg is a unique unsigned integer representing a registered
+ *	alarm which the client wants to unregister.
+ *
+ * @return 0 on success, -1 if the alarm was not found
+ *
+ * @see snmp_alarm_register
+ * @see snmp_alarm_register_hr
+ * @see snmp_alarm_unregister
+ */
+int
+snmp_alarm_reset(unsigned int clientreg)
+{
+    struct snmp_alarm *a;
+    struct timeval  t_now;
+    if ((a = sa_find_specific(clientreg)) != NULL) {
+        gettimeofday(&t_now, NULL);
+        a->t_lastM.tv_sec = t_now.tv_sec;
+        a->t_lastM.tv_usec = t_now.tv_usec;
+        a->t_nextM.tv_sec = 0;
+        a->t_nextM.tv_usec = 0;
+        NETSNMP_TIMERADD(&t_now, &a->t, &a->t_nextM);
+        return 0;
+    }
+    DEBUGMSGTL(("snmp_alarm_reset", "alarm %d not found\n",
+                clientreg));
+    return -1;
+}
 /**  @} */
